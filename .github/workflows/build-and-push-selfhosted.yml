name: Build and Publish Docker Images for Self-Hosted

on:
    release:
        types: [published]

jobs:
    build-and-push:
        name: Build and Push Docker Images for Self-Hosted
        runs-on: ubuntu-latest
        permissions:
            contents: read
            packages: write

        steps:
            - name: Checkout Repository
              uses: actions/checkout@v4.2.2

            - name: Capture Release Version
              run: echo "RELEASE_VERSION=${{ github.event.release.tag_name }}" >> $GITHUB_ENV

            - name: Fetch Parameter Store values and create .env
              run: |
                  [ -f .env ] && rm .env

                  echo WEB_NODE_ENV=self-hosted >> .env
                  echo WEB_HOSTNAME_API=self-hosted >> .env
                  echo WEB_HOSTNAME_BILLING= >> .env
                  echo WEB_NEXTAUTH_SECRET= >> .env
                  echo NEXTAUTH_URL= >> .env
                  echo WEB_GITHUB_INSTALL_URL= >> .env
                  echo GITHUB_CLIENT_SECRET= >> .env
                  echo GLOBAL_GITLAB_CLIENT_ID= >> .env
                  echo GLOBAL_GITLAB_REDIRECT_URL= >> .env
                  echo WEB_GITLAB_SCOPES= >> .env
                  echo WEB_GITLAB_OAUTH_URL= >> .env
                  echo WEB_TERMS_AND_CONDITIONS="https://kodus.notion.site/Pol-tica-de-uso-de-dados-e-permiss-es-8e43a48513d74be984c3089a2f9631fd?pvs=4" >> .env
                  echo AZURE_REPOS_HOSTNAME= >> .env
                  echo WEB_OAUTH_GITLAB_CLIENT_ID= >> .env
                  echo WEB_OAUTH_GITLAB_CLIENT_SECRET= >> .env
                  echo WEB_OAUTH_GITHUB_CLIENT_ID= >> .env
                  echo WEB_OAUTH_GITHUB_CLIENT_SECRET= >> .env
                  echo WEB_ANALYTICS_HOSTNAME= >> .env
                  echo WEB_ANALYTICS_SECRET= >> .env
                  echo WEB_SUPPORT_DOCS_URL="https://docs.kodus.io" >> .env
                  echo WEB_SUPPORT_DISCORD_INVITE_URL="https://discord.gg/CceCdAke" >> .env
                  echo WEB_SUPPORT_TALK_TO_FOUNDER_URL="https://cal.com/gabrielmalinosqui/30min" >> .env
                  echo WEB_TOKEN_DOCS_GITHUB=https://docs.kodus.io/how_to_use/en/code_review/general_config/github_pat >> .env
                  echo WEB_TOKEN_DOCS_GITLAB=https://docs.kodus.io/how_to_use/en/code_review/general_config/gitlab_pat >> .env
                  echo WEB_TOKEN_DOCS_BITBUCKET=https://docs.kodus.io/how_to_use/en/code_review/general_config/bitbucket_pat >> .env
                  echo WEB_TOKEN_DOCS_AZUREREPOS=https://docs.kodus.io/how_to_use/en/code_review/general_config/azure_devops_pat >> .env
                  echo WEB_HOSTNAME_MCP_MANAGER= >> .env
                  echo WEB_RULE_FILES_DOCS="https://docs.kodus.io/how_to_use/en/code_review/configs/rules_file_detection" >> .env

            - name: Set up Docker Buildx
              uses: docker/setup-buildx-action@v3.10.0

            - name: Login to GitHub Container Registry
              uses: docker/login-action@v3.4.0
              with:
                  registry: ghcr.io
                  username: ${{ github.actor }}
                  password: ${{ secrets.GITHUB_TOKEN }}

            - name: Extract Docker Metadata
              id: meta
              uses: docker/metadata-action@v5.7.0
              with:
                  images: ghcr.io/${{ github.repository_owner }}/kodus-web
                  tags: |
                      type=semver,pattern={{version}}
                      type=raw,value=latest

            - name: Build and Push Docker Images
              uses: docker/build-push-action@v6.15.0
              with:
                  context: .
                  file: ./Dockerfiles/Dockerfile.selfhosted
                  push: true
                  tags: ${{ steps.meta.outputs.tags }}
                  labels: ${{ steps.meta.outputs.labels }}
                  platforms: linux/amd64,linux/arm64
                  build-args: |
                      API_CLOUD_MODE=false

            - name: Notify Discord on Success
              if: success()
              uses: sarisia/actions-status-discord@v1.15.3
              with:
                  webhook: ${{ secrets.DISCORD_WEBHOOK }}
                  content: ":tada: A imagem Docker versão `${{ env.RELEASE_VERSION }}` foi construída e enviada com sucesso para o GitHub Container Registry (Self-Hosted)."
                  title: "Build e Push: kodus-web (Self-Hosted)"
                  username: "GitHub Actions"
                  color: 0x00FF00

            - name: Notify Discord on Failure
              if: failure()
              uses: sarisia/actions-status-discord@v1.15.3
              with:
                  webhook: ${{ secrets.DISCORD_WEBHOOK }}
                  content: ":x: Falha ao construir ou enviar a imagem Docker `${{ env.RELEASE_VERSION }}` para o GitHub Container Registry (Self-Hosted). Verifique os logs para mais detalhes."
                  title: "Build e Push: kodus-web (Self-Hosted)"
                  username: "GitHub Actions"
                  color: 0xFF0000
